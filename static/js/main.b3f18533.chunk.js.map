{"version":3,"sources":["redux/todoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/store.js","index.js"],"names":["getTodosAsync","createAsyncThunk","a","fetch","resp","ok","json","todos","addTodoAsync","payload","method","headers","body","JSON","stringify","title","todo","toggleCompleteAsync","id","completed","deleteTodoAsync","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","nanoid","push","toggleComplete","index","findIndex","deleteTodo","filter","extraReducers","fulfilled","actions","AddTodoForm","useState","value","setValue","dispatch","useDispatch","onSubmit","event","preventDefault","className","type","placeholder","onChange","target","TodoItem","checked","onClick","TodoList","useSelector","useEffect","map","TotalCompleteItems","length","App","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b3f18533.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport const getTodosAsync = createAsyncThunk(\r\n\t'todos/getTodosAsync',\r\n\tasync () => {\r\n\t\tconst resp = await fetch('http://localhost:7000/todos');\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todos = await resp.json();\r\n\t\t\treturn { todos };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const addTodoAsync = createAsyncThunk(\r\n\t'todos/addTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch('http://localhost:7000/todos', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ title: payload.title }),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const toggleCompleteAsync = createAsyncThunk(\r\n\t'todos/completeTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch(`http://localhost:7000/todos/${payload.id}`, {\r\n\t\t\tmethod: 'PATCH',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ completed: payload.completed }),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const deleteTodoAsync = createAsyncThunk(\r\n\t'todos/deleteTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch(`http://localhost:7000/todos/${payload.id}`, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\treturn { id: payload.id };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const todoSlice = createSlice({\r\n\tname: 'todos',\r\n\tinitialState: [],\r\n\treducers: {\r\n\t\taddTodo: (state, action) => {\r\n\t\t\tconst todo = {\r\n\t\t\t\tid: nanoid(),\r\n\t\t\t\ttitle: action.payload.title,\r\n\t\t\t\tcompleted: false,\r\n\t\t\t};\r\n\t\t\tstate.push(todo);\r\n\t\t},\r\n\t\ttoggleComplete: (state, action) => {\r\n\t\t\tconst index = state.findIndex((todo) => todo.id === action.payload.id);\r\n\t\t\tstate[index].completed = action.payload.completed;\r\n\t\t},\r\n\t\tdeleteTodo: (state, action) => {\r\n\t\t\treturn state.filter((todo) => todo.id !== action.payload.id);\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[getTodosAsync.fulfilled]: (state, action) => {\r\n\t\t\treturn action.payload.todos;\r\n\t\t},\r\n\t\t[addTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\tstate.push(action.payload.todo);\r\n\t\t},\r\n\t\t[toggleCompleteAsync.fulfilled]: (state, action) => {\r\n\t\t\tconst index = state.findIndex(\r\n\t\t\t\t(todo) => todo.id === action.payload.todo.id\r\n\t\t\t);\r\n\t\t\tstate[index].completed = action.payload.todo.completed;\r\n\t\t},\r\n\t\t[deleteTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\treturn state.filter((todo) => todo.id !== action.payload.id);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodoAsync } from '../redux/todoSlice';\r\n\r\nconst AddTodoForm = () => {\r\n\tconst [value, setValue] = useState('');\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (value) {\r\n\t\t\tdispatch(\r\n\t\t\t\taddTodoAsync({\r\n\t\t\t\t\ttitle: value,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit} className='form-inline mt-3 mb-3'>\r\n\t\t\t<label className='sr-only'>Name</label>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tclassName='form-control mb-2 mr-sm-2'\r\n\t\t\t\tplaceholder='Add todo...'\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\r\n\t\t\t></input>\r\n\r\n\t\t\t<button type='submit' className='btn btn-primary mb-2'>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleCompleteAsync, deleteTodoAsync } from '../redux/todoSlice';\r\n\r\nconst TodoItem = ({ id, title, completed }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleCheckboxClick = () => {\r\n\t\tdispatch(toggleCompleteAsync({ id, completed: !completed }));\r\n\t};\r\n\r\n\tconst handleDeleteClick = () => {\r\n\t\tdispatch(deleteTodoAsync({ id }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<li className={`list-group-item ${completed && 'list-group-item-success'}`}>\r\n\t\t\t<div className='d-flex justify-content-between'>\r\n\t\t\t\t<span className='d-flex align-items-center'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\tclassName='mr-3'\r\n\t\t\t\t\t\tchecked={completed}\r\n\t\t\t\t\t\tonClick={handleCheckboxClick}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</span>\r\n\t\t\t\t<button onClick={handleDeleteClick} className='btn btn-danger'>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useEffect } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getTodosAsync } from '../redux/todoSlice';\r\n\r\nconst TodoList = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst todos = useSelector((state) => state.todos);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getTodosAsync());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<ul className='list-group'>\r\n\t\t\t{todos.map((todo) => (\r\n\t\t\t\t<TodoItem id={todo.id} title={todo.title} completed={todo.completed} />\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst TotalCompleteItems = () => {\r\n\tconst todos = useSelector((state) =>\r\n\t\tstate.todos.filter((todo) => todo.completed === true)\r\n\t);\r\n\r\n\treturn <h4 className='mt-3'>Total complete items: {todos.length}</h4>;\r\n};\r\n\r\nexport default TotalCompleteItems;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddTodoForm from './components/AddTodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport TotalCompleteItems from './components/TotalCompleteItems';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className='container bg-white p-4 mt-5'>\r\n\t\t\t<h1>ToDo List</h1>\r\n\t\t\t<AddTodoForm />\r\n\t\t\t<TodoList />\r\n\t\t\t<TotalCompleteItems />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport todoReducer from './todoSlice';\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\ttodos: todoReducer,\r\n\t},\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}